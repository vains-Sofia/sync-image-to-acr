name: Sync Public Docker Images to ACR

on:
  issues:
    types: [opened, edited]

jobs:
  sync:
    if: startsWith(github.event.issue.title, 'sync:')
    runs-on: ubuntu-latest
    permissions:
      issues: write  # 必需：用于评论和关闭 issue
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract image list from title or use defaults
        id: extract
        run: |
          TITLE="${{ github.event.issue.title }}"
          IMAGES=$(echo "$TITLE" | sed -n 's/^sync:\s*//p')
          if [ -z "$IMAGES" ]; then
            IMAGES="${{ secrets.DEFAULT_IMAGES }}"
          fi
          echo "images=$IMAGES" >> $GITHUB_OUTPUT

      - name: "📝 Pre-comment: syncing started"
        run: |
          IMAGES="${{ steps.extract.outputs.images }}"
          echo "🚀 正在同步以下镜像，请稍候：" > comment.txt
          echo "" >> comment.txt
          
          for IMAGE in $IMAGES; do
          echo "- $IMAGE" >> comment.txt
          done
          
          gh issue comment ${{ github.event.issue.number }} -F comment.txt
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Aliyun ACR
        run: |
          echo "${{ secrets.ACR_PASSWORD }}" | docker login -u "${{ secrets.ACR_USERNAME }}" --password-stdin ${{ secrets.ACR_REGISTRY }}

      - name: Sync public images to ACR
        id: sync
        run: |
          IMAGES="${{ steps.extract.outputs.images }}"
          echo "📦 以下为可用于拉取的 ACR 镜像命令：" > comment.txt
          echo "" >> comment.txt
          
          # 创建函数来处理镜像名
          normalize_image_name() {
            local original_image="$1"
            local normalized_image
          
            # 处理不同的镜像名格式
            if [[ "$original_image" == docker.io/* ]]; then
              # 去掉 docker.io 前缀: docker.io/library/nginx -> library/nginx
              normalized_image="${original_image#docker.io/}"
            elif [[ "$original_image" == */* ]]; then
              # 包含斜杠的镜像名: minio/minio -> minio-minio
              normalized_image="${original_image//\//-}"
            else
              # 官方镜像: nginx -> nginx
              normalized_image="${original_image}"
            fi
          
            echo "$normalized_image"
          }
          
          for IMAGE in $IMAGES; do
            echo "➡️ 处理镜像：$IMAGE"
          
            # 标准化镜像名
            NORMALIZED_NAME=$(normalize_image_name "$IMAGE")
          
            if docker pull "$IMAGE"; then
              # 构建 ACR 镜像路径
              ACR_IMAGE="${{ secrets.ACR_REGISTRY }}/github-proxy/$NORMALIZED_NAME"
          
              echo "🏷️ 标记镜像：$IMAGE -> $ACR_IMAGE"
              docker tag "$IMAGE" "$ACR_IMAGE"
          
              echo "📤 推送镜像：$ACR_IMAGE"
              if docker push "$ACR_IMAGE"; then
                echo "✅ 成功推送：$ACR_IMAGE"
          
                # 在评论中显示原始镜像名和 ACR 镜像名的对应关系
                echo "**原始镜像:** \`$IMAGE\`" >> comment.txt
                echo "\`\`\`bash" >> comment.txt
                echo "docker pull $ACR_IMAGE" >> comment.txt
                echo "\`\`\`" >> comment.txt
                echo "" >> comment.txt
              else
                echo "❌ 推送失败：$ACR_IMAGE"
                echo "❌ 推送失败：\`$IMAGE\` -> \`$ACR_IMAGE\`" >> comment.txt
                echo "" >> comment.txt
              fi
            else
              echo "❌ 无法拉取镜像：$IMAGE（可能是私有或不存在）"
              echo "❌ 无法拉取镜像：\`$IMAGE\`（可能是私有或不存在）" >> comment.txt
              echo "" >> comment.txt
            fi
          
            echo "---"
          done

      - name: Comment on issue with pull commands
        run: |
          # 添加说明头部
          echo "## 🎯 镜像同步完成" > final_comment.txt
          echo "" >> final_comment.txt
          echo "### 🚀 拉取命令" >> final_comment.txt
          echo "" >> final_comment.txt
          
          # 合并原有的评论内容
          cat comment.txt >> final_comment.txt
          
          gh issue comment ${{ github.event.issue.number }} -F final_comment.txt
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Close the issue
        run: |
          gh issue close ${{ github.event.issue.number }} --comment "✅ 公共镜像同步完成，Issue 已关闭。"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}